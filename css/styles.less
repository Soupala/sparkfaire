html {
    font-size: 62.5%;
}

body {
    background-color: black;
    margin: 10px auto;
    font-size: 1em;
}

#container {
    max-width:96%;
    margin: 0 auto;
    color: #d76107;
    text-align:center;
}


#spark {
    max-width:96%;
    margin:0px auto;
}

/* Example of mixin */
.reflect (@length: 50%, @opacity: 0.2){
    -webkit-box-reflect: below 0px 
    -webkit-gradient(linear, left top, left bottom, from(transparent), 
    color-stop(@length, transparent), to(rgba(255,255,255,@opacity)));
}
 
/* Implementation of mixin */
#container {
    .reflect(20%, 0.2);
}

/* For responsive, pre-define breakpoints, then pass selector, values, and nested rules into each @media @breakpoint_variable */

@highdensity: ~"only screen and (-webkit-min-device-pixel-ratio: 1.5)",
              ~"only screen and (min--moz-device-pixel-ratio: 1.5)",
              ~"only screen and (-o-min-device-pixel-ratio: 3/2)",
              ~"only screen and (min-device-pixel-ratio: 1.5)";
@mobile:      ~"only screen and (max-width: 529px)";
@tablet:      ~"only screen and (min-width: 530px) and (max-width: 949px)";
@desktop:     ~"only screen and (min-width: 950px) and (max-width: 1128px)";
@desktop-xl:  ~"only screen and (min-width: 1129px)";


/* =MIXINS (mostly from Twitter Bootstrap's mixins.less)
   ---------------------------------------------------------------------------------------------------- */
// Border Radius
.border-radius(@radius) {
  -webkit-border-radius: @radius;
     -moz-border-radius: @radius;
          border-radius: @radius;
}

// Drop shadows
.box-shadow(@shadow) {
  -webkit-box-shadow: @shadow;
     -moz-box-shadow: @shadow;
          box-shadow: @shadow;
}

// Sizing shortcuts
// -------------------------
.size(@height, @width) {
  width: @width;
  height: @height;
}
.square(@size) {
  .size(@size, @size);
}

// Center-align a block level element
// ----------------------------------
.center-block() {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

// Opacity
.opacity(@opacity) {
  opacity: @opacity / 100;
  filter: ~"alpha(opacity=@{opacity})";
}

/* Palette for for responsive label stuff below */

@base-background:      #fffaef; /*cream*/
@base-text:            #4f4351; /*purple/grey*/

@white:                #fff;
@black:                #000;

@color-subtitles:      #9a8864; /*mud*/
@color-highlight:      #e9e59b; /*lime*/
@color-dark:         #080c3c; /*midnight*/

/*This adds a label in the top-left corner that displays the current media query
state.*/
body {
    &:after { /* notice how we're nesting this stuff inside of a parent element */
    background: red;
    color: @white;
    content: "undefined";
    left: 0;
    .opacity(80);
    padding: .5em 1em;
    position: absolute;
    text-align: center;
    top: 0;
    z-index: 99;
    @media @mobile {
      background: orange;
      content: "mobile";
    }
    @media @tablet {
      background: purple;
      content: "tablet";
    }
    @media @desktop {
      background: green;
      content: "desktop";
    }
    @media @desktop-xl {
      background: blue;
      content: "desktop-xl";
    }
  }
}

@media @highdensity {
    #container {
        font-size:3em;
    }
}

@media @mobile {
    #container {
        font-size:5.5em;
    }
}


@media @tablet {
        #container {
        font-size:6em;
    }
}

@media @desktop {
    #container {
        font-size:7em;
        max-width:85%;
        }
        #spark {
            max-width:85%;
        }
}

@media @desktop-xl {
    #container {
        font-size:8em;
        max-width:73%;
        }
        #spark {
            max-width:73%;
        }
}